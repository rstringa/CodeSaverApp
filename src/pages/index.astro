---
import LayoutBase from '@layouts/LayoutBase.astro'
import Sidebar from '@components/Sidebar/Sidebar.astro'
import Welcome from '@components/Welcome.astro'
import ShowSnippets from '@components/Snippets/ShowSnippets.astro'
import Search from '@components/Search.astro'
//import { userLoggedIn, userData } from '@utils/userLoggedIn'
import CreateSnippet from '@components/Snippets/CreateSnippet.astro'

import { supabase } from '@lib/supabaseClient'

// Obtener la sesi√≥n de usuario
const { data: userSession } = await supabase.auth.getSession()
const userSessionId = userSession?.session?.user.id
---

<>
	<LayoutBase>
		<main
			class={`
				relative grid-cols-[1fr] grid
				lg:grid-cols-[270px_1fr]
				min-h-[calc(100dvh-100px)]
				${userSessionId ? 'logged-in' : 'logged-out'}
			  `}
		>
			<Sidebar />

			<div class="_content max-[100vw] h-full p-6 pb-12">
				<div class="_top mb-4 flex flex-row items-start justify-between gap-4 lg:flex-row">
					<div class="flex gap-2 justify-between items-center w-full">
						{
							userSessionId ? (
						
								<Search />
							) : null
						}
					</div>
					<div class=`mb-3 ${!userSessionId ? "hidden lg:flex" : ""} `>
						<a 
							class=`_new_snippet _btn-featured font-semibold ${!userSessionId
            ? "pointer-events-none opacity-50" : "" }`
							href="#"
							>+ Crear Snippet
						</a>
					</div>
				</div>

				{!userSessionId ? 
					<Welcome />  
					:
					<ShowSnippets />
					<CreateSnippet />
				}
			</div>
		</main>
	</LayoutBase>
</>
<style>
	body.logged-out ._top {
		@media (max-width: 1024px) {
			flex-direction: column;
		}
	}
</style>

<script>
	document.addEventListener('DOMContentLoaded', function() {
		const editedSnippet = localStorage.getItem('edited-snippet');
	if(editedSnippet) {
		const snippetId = editedSnippet;
		const snippetElement = document.querySelector(`._snippet[data-snippet-id="${snippetId}"]`);
		if (snippetElement) {
			snippetElement.classList.add('is-edited');
			snippetElement.scrollIntoView({ behavior: 'smooth' });
			
			localStorage.removeItem('edited-snippet');
			setTimeout(() => {
				snippetElement.classList.remove('is-edited');
			}, 5000);
		}
	}
	});

</script>