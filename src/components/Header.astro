---
import { Icon } from 'astro-icon/components'
import { supabase } from '@lib/supabaseClient';
const { data: userSession } = await supabase.auth.getSession()
const userSessionId = userSession?.session?.user.id

// Get page url
const url = new URL(Astro.url.pathname, Astro.url.origin);
const urlPath = url.pathname;

---

<header class="_header  relative
flex justify-between p-6 py-3 m-auto border-b-1 border-slate-700

">
  <div class="_container 
  flex flex-col justify-between items-center w-full m-auto
  md:flex-row 
  ">
    <div class="_logo mb-2 lg:mb-0">
      <a href="/" class="flex items-center gap-2">
        <Icon name="home" class="w-7 h-7" />
        <span class="text-slate-400">Code<b>Saver</b>App</span>
      </a>
    </div>
    <nav class="_menu w-full md:w-auto flex items-center justify-center">

      
      {userSessionId ? (
        <div class="flex items-center w-full"> 
          <p class="
          text-sm! lg:text-md
          font-regular mr-6 text-slate-400
          w-full
          ">Hola, {userSession?.session?.user?.user_metadata?.full_name
            ? userSession?.session?.user?.user_metadata?.full_name
            :  userSession?.session?.user?.email}!</p>
          <img
            src={userSession?.session?.user?.user_metadata?.avatar_url || '/default-avatar.webp'}
            alt="User Avatar"
            class="w-8 h-8 rounded-full mr-4"
          />
          <a
            href="#"
            id="btn_logout"
            class="_logout _btn-normal text-sm! lg:text-md"
            onclick="handleLogout()"
          >
            Cerrar<span class="hidden lg:inline-block lg:ml-1">Sesi√≥n</span>
          </a>
        </div>
      ) : (
        <a
          href="/login"
          id="btn_register"
          class={`_login _btn-normal ${urlPath === '/login' ? 'text-green-600!' : ''}`}
        >
          Ingresar
        </a>
        <span class="m-3 inline-flex text-slate-400">o</span> 
        <a
          href="/register"
          id="btn_login"
          class={`_register _btn-normal ${urlPath === '/register' ? 'text-green-600!' : ''}`}
        >
          Registrarse
        </a>
      )}

    </nav>
  </div>
  <div class="_loading-line"></div>
</header>

<script>
  // Extend the TypeScript definition of the `window` object
  declare global {
    interface Window {
      handleLogout: () => Promise<void>;
    }
  }

  // Attach the function to the global `window` object
  window.handleLogout = async function () {
    try {
      const response = await fetch("/api/auth/logout", { method: "POST" });
      if (response.ok) {
        console.error("Ok to log out");
        window.location.href = "/"; // Redirect to the homepage after logout
      } else {
        console.error("Failed to log out");
      }
    } catch (error) {
      console.error("Error during logout:", error);
    }
  };
</script>
<style>
._loading-line {
  --time: 2s;
  --width:50px;
  position: absolute;
  width: var(--width);
  height: 2px;
  background-color: var(--color-green-800);
  left: 0;
  bottom: -2px;
  filter: blur(1px);
  will-change: left, width;
  transform: translateX(-100%);
}
body.is-loading ._loading-line { 
	animation: is-loading var(--time, 2s) ease-out;
}
@keyframes is-loading {
	0% {
		left: 0;
	}
  40% {
    --width: 50px;
  }
  50% {
    --width:100px;
  }
	100% {
    --width:40px;
		left: 100%;
	}
}


</style>